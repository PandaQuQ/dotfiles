#!/usr/bin/env bash

#	Script to install my dotfiles
#   Oringinal Author: z0mbi3
#	Modified by PandaQuQ
#	Original url: https://github.com/gh0stzk
#	Modifier: https://github.com/pandaquq

CRE=$(tput setaf 1)
CYE=$(tput setaf 3)
CGR=$(tput setaf 2)
CBL=$(tput setaf 4)
BLD=$(tput bold)
CNC=$(tput sgr0)
OK='\n\033[0;32m OK...\033[0m'

logo () {
	
	local text="${1:?}"
  echo -en "  
                              _,add8ba,
                            ,d888888888b,
                           d8888888888888b                        _,ad8ba,_
                          d888888888888888)                     ,d888888888b,
                          I8888888888888888 _________          ,8888888888888b
                __________'Y88888888888888P'''''''''''baaa,__ ,888888888888888,
            ,adP'''''''''''9888888888P''^                 ^''Y8888888888888888I
         ,a8'^           ,d888P'888P^                           ^'Y8888888888P'
       ,a8^            ,d8888'                                     ^Y8888888P'
      a88'           ,d8888P'                                        I88P'^
    ,d88'           d88888P'                                          'b,
   ,d88'           d888888'                                            'b,
  ,d88'           d888888I                                              'b,
  d88I           ,8888888'            ___                                'b,
 ,888'           d8888888          ,d88888b,              ____            'b,
 d888           ,8888888I         d88888888b,           ,d8888b,           'b
,8888           I8888888I        d8888888888I          ,88888888b           8,
I8888           88888888b       d88888888888'          8888888888b          8I
d8886           888888888       Y888888888P'           Y8888888888,        ,8b
88888b          I88888888b      'Y8888888^             'Y888888888I        d88,
Y88888b         '888888888b,      '''''^                'Y8888888P'       d888I
'888888b         88888888888b,                           'Y8888P^        d88888
 Y888888b       ,8888888888888ba,_          _______        '''^        ,d888888
 I8888888b,    ,888888888888888888ba,_     d88888888b               ,ad8888888I
 '888888888b,  I8888888888888888888888b,    ^'Y888P'^      ____.,ad88888888888I
  88888888888b,'888888888888888888888888b,     ''      ad888888888888888888888'
  8888888888888698888888888888888888888888b_,ad88ba,_,d88888888888888888888888
  88888888888888888888888888888888888888888b,''''^ d8888888888888888888888888I
  8888888888888888888888888888888888888888888baaad888888888888888888888888888'
  Y8888888888888888888888888888888888888888888888888888888888888888888888888P
  I888888888888888888888888888888888888888888888P^  ^Y8888888888888888888888'
  'Y88888888888888888P88888888888888888888888888'     ^88888888888888888888I
   'Y8888888888888888 '8888888888888888888888888       8888888888888888888P'
    'Y888888888888888  '888888888888888888888888,     ,888888888888888888P'
     'Y88888888888888b  '88888888888888888888888I     I888888888888888888'
       'Y8888888888888b  '8888888888888888888888I     I88888888888888888'
         'Y88888888888P   '888888888888888888888b     d8888888888888888'
            ^''''''''^     'Y88888888888888888888,    888888888888888P'
                            '8888888888888888888b,   Y888888888888P^
                             'Y888888888888888888b   'Y8888888P'^
                                'Y8888888888888888P     '''''^
                                  ''YY88888888888P'
                                       ^'''''''''
        Panda script\n\n"
    printf ' %s [%s%s %s%s %s]%s\n\n' "${CRE}" "${CNC}" "${CYE}" "${text}" "${CNC}" "${CRE}" "${CNC}"
    sleep 2
}

if [ "$(id -u)" = 0 ]; then
    echo "This script MUST NOT be run as root user."
    exit 1
fi

logo "Welcome!"
printf '%sThis script will install needed dependencies and copy my dotfiles to your bspwm setup.%s\n\nThis installer script does NOT change any configuration of your system.\nIts just a script that copies and moves my dotfiles to your ~/.config directory\n\n' "${CRE}" "${CNC}"
sleep 5

while true; do
  read -rp " Do you wish to continue? [Yy/Nn]: " yn
    case $yn in
      [Yy]* ) break;;
      [Nn]* ) exit;;
      * ) printf " Error: just write 'y' or 'n'\n\n";;
    esac
    done
      clear

logo "Installing needed packages.."

dependencies=(wget curl thunar sddm pacman-contrib bspwm polybar sxhkd alacritty dunst rofi lsd jq polkit-gnome git playerctl geany ranger picom feh ueberzug maim pamixer libwebp webp-pixbuf-loader xorg-xprop xorg-xkill papirus-icon-theme ttf-jetbrains-mono ttf-jetbrains-mono-nerd ttf-terminus-nerd ttf-inconsolata ttf-joypixels zsh)

is_installed() {
  pacman -Qi $1 &> /dev/null
  return $?
}

printf "%s%sChecking for required packages...%s\n" "${BLD}" "${CBL}" "${CNC}"
for package in "${dependencies[@]}"
do
  if ! is_installed $package; then
    sudo pacman -S $package --noconfirm
    printf "\n"
  else
    printf '%s%s is already installed on your system!%s\n' "${CGR}" "$package" "${CNC}"
    sleep 1
  fi
done
sleep 2
clear

logo "Checking if yay is installed"

  if ! command -v yay &>/dev/null; then
    printf "%s%sError YAY is not installed%s\n" "${BLD}" "${CRE}" "${CNC}"
    sleep 1
    printf "%s%sInstalling YAY..%s\n\n" "${BLD}" "${CYE}" "${CNC}"
    sleep 1
    git clone https://aur.archlinux.org/yay.git
    cd yay
    makepkg -si
    cd $HOME
    rm -rf yay
  else
    printf "%s%sYAY is already installed on your system%s\n" "${BLD}" "${CGR}" "${CNC}"
  fi
sleep 2
clear

logo "Cloning the Theme!"
[ -d ~/dotfiles ] && rm -rf ~/dotfiles
printf "Cloning the theme from https://github.com/pandaquq/dotfiles\n\n"
cd $HOME
git clone --depth=1 https://github.com/pandaquq/dotfiles.git
sleep 2
clear

logo "Backup your files"
printf "Backup files will be stored in %s%s%s/.ConfigBackup%s \n\n" "${BLD}" "${CRE}" "$HOME" "${CNC}"
sleep 5

if [ ! -d "$HOME/.ConfigBackup" ]; then 
  mkdir -p "${HOME}"/.ConfigBackup
fi

[ -d ~/.config/bspwm ] && mv ~/.config/bspwm ~/.ConfigBackup/bspwm-backup-"$(date +%Y.%m.%d-%H.%M.%S)"
[ -d ~/.config/alacritty ] && mv ~/.config/alacritty ~/.ConfigBackup/alacritty-backup-"$(date +%Y.%m.%d-%H.%M.%S)"
[ -d ~/.config/picom ] && mv ~/.config/picom ~/.ConfigBackup/picom-backup-"$(date +%Y.%m.%d-%H.%M.%S)"
[ -d ~/.config/rofi ] && mv ~/.config/rofi ~/.ConfigBackup/rofi-backup-"$(date +%Y.%m.%d-%H.%M.%S)"
[ -d ~/.config/eww ] && mv ~/.config/eww ~/.ConfigBackup/eww-backup-"$(date +%Y.%m.%d-%H.%M.%S)"
[ -d ~/.config/sxhkd ] && mv ~/.config/sxhkd ~/.ConfigBackup/sxhkd-backup-"$(date +%Y.%m.%d-%H.%M.%S)"
[ -d ~/.config/dunst ] && mv ~/.config/dunst ~/.ConfigBackup/dunst-backup-"$(date +%Y.%m.%d-%H.%M.%S)"
[ -d ~/.config/gtk-3.0 ] && mv ~/.config/gtk-3.0 ~/.ConfigBackup/gtk-3.0-backup-"$(date +%Y.%m.%d-%H.%M.%S)"
[ -d ~/.config/polybar ] && mv ~/.config/polybar ~/.ConfigBackup/polybar-backup-"$(date +%Y.%m.%d-%H.%M.%S)"
[ -d ~/.config/ranger ] && mv ~/.config/ranger ~/.ConfigBackup/ranger-backup-"$(date +%Y.%m.%d-%H.%M.%S)"
[ -d ~/.config/zsh ] && mv ~/.config/zsh ~/.ConfigBackup/zsh-backup-"$(date +%Y.%m.%d-%H.%M.%S)"

[ -f ~/.zshrc ] && mv ~/.zshrc ~/.ConfigBackup/.zshrc-backup-"$(date +%Y.%m.%d-%H.%M.%S)"

printf "%s%sDone!!%s\n" "${BLD}" "${CGR}" "${CNC}"
sleep 2
clear

logo "Copying the Theme.."
printf "Copying files to respective directories..\n"

if [ ! -d $HOME/.config ]; then
  mkdir -p $HOME/.config
  cp -Rf $HOME/dotfiles/config/* $HOME/.config/
else
  cp -Rf $HOME/dotfiles/config/* $HOME/.config/
fi

if [ ! -d $HOME/.local/share/fonts ]; then
  mkdir -p $HOME/.local/share/fonts
  cp -Rf $HOME/dotfiles/misc/fonts/* $HOME/.local/share/fonts/
else
  cp -Rf $HOME/dotfiles/misc/fonts/* $HOME/.local/share/fonts/
fi

cp -f $HOME/dotfiles/home/.zshrc $HOME

printf "%s%sFiles copied succesfully!!%s\n" "${BLD}" "${CGR}" "${CNC}"
sleep 2
clear

logo "Installing needed packages from AUR"         
yay -S eww nerd-fonts-cozette-ttf ttf-maple-latest sublime-text-4 yesplaymusic --needed --noconfirm --removemake --cleanafter 
sleep 2   
clear

logo "Reloading fonts.."
fc-cache -rv >/dev/null 2>&1
printf "%s%sFonts reloaded succesfully!%s\n" "${BLD}" "${CGR}" "${CNC}"
sleep 2
clear

logo "Enabling SDDM.."
sudo systemctl enable sddm
sleep 2
clear

logo "Installing WACSBF.."
mkdir -p ~/tmp/ 
git clone https://git.pandaquq.tk/panda/WACSBF.git ~/tmp/
sh ~/tmp/install.sh || printf "loaded"
rm -rf ~/tmp
sleep 2
clear

logo "Installation finished"
printf "%s%sPlease reboot, then select bspwm in your login manager and log in.%s\n\n" "${BLD}" "${CRE}" "${CNC}"
chsh -s /usr/bin/zsh
zsh
sleep 2
clear